/******************************************************************************
*
*  EQLimitUpDn.java
*     QuoddMsg._mt    == 'e'  (_mtEQUITY)
*     QuoddMsg._mtSub == '='  (_eqSubLIMITUPDN)
*
*     class EQLimitUpDn : public QuoddMsg
*     {
*     public:
*        u_char _bidPrc[8];     // x0.10 : Lower Band
*        u_char _askPrc[8];     // x0.10 : Upper Band
*        u_char _limitTime[4];
*        u_char _indicator;
*     };
*
*  REVISION HISTORY:
*     25 FEB 2013 jcs  Created.
*     23 JUN 2015 jcs  Build 94: Dump()
*  
*  (c) 1994-2015 Gatea Ltd.
*******************************************************************************/
package QuoddFeed.msg;

import java.util.*;
import QuoddFeed.Enum.*;
import QuoddFeed.msg.*;
import QuoddFeed.util.*;

/////////////////////////////////////////////////////////////////
//
//              c l a s s   E Q L i m i t U p D n
//
/////////////////////////////////////////////////////////////////
/**
 * The EQLimitUpDn class is a parsed Equity Limit Up/Down message received 
 * from the UltraCache.
 * <p>
 * A EQLimitUpDn is generated by the {@link QuoddFeed.util.UltraChan} class
 * which invokes the
 * {@link QuoddFeed.util.UltraChan#OnUpdate(String,EQLimitUpDn)}
 * callback method to deliver the update into your application.
 */
public class EQLimitUpDn extends QuoddMsg
{
   static public int MINSZ = QuoddMsg.MINSZ + 21;

   public  double _upLimit;
   public  double _downLimit;
   public  long   _time;
   private int    _indicator;

   ///////////////////////////////
   // Constructor
   ///////////////////////////////
   public EQLimitUpDn()
   {
      _upLimit   = 0.0;
      _downLimit = 0.0;
      _time      = 0;
      _indicator = 0;
   }

   public EQLimitUpDn( byte[] b, int off, int nLeft )
   {
      this.Set( b, off, nLeft );
   }

   public EQLimitUpDn( EQLimitUpDn c )
   {
      super( c );
      _upLimit   = c._upLimit;
      _downLimit = c._downLimit;
      _time      = c._time; 
      _indicator = c._indicator;  
   }

   public EQLimitUpDn clone() { return new EQLimitUpDn( this ); }


   ///////////////////////////////
   // QuoddMsg Override - Dump 
   ///////////////////////////////
   @Override
   public String Dump()
   {
      String s;

      s  = super.Dump();
      s += s.format( "   UP = %.3f; ", _upLimit );
      s += s.format( "   DOWN = %.3f\n", _downLimit );
      return s;
   }


   ///////////////////////////////
   // Mutator
   ///////////////////////////////
   @Override
   public QuoddMsg Set( byte[] b, int off, int nLeft )
   {
      String   err;
      QuoddMsg rtn;

      super.Set( b, off, nLeft );
      off += QuoddMsg.MINSZ;
      try {
         _upLimit   = BigEndian.GetPrc64( b, off+ 0 );
         _downLimit = BigEndian.GetPrc64( b, off+ 8 );
         _time      = BigEndian.GetInt32( b, off+16 );
         _indicator = (int)b[off+20];
      } catch( StringIndexOutOfBoundsException e ) {
         err = e.getMessage();
      }
      return this;
   }
}
