/******************************************************************************
*
*  EQMktStats.java
*     QuoddMsg._mt    == 'e'  (_mtEQUITY)
*     QuoddMsg._mtSub == 0x7f (_eqSubMKTSTATS)
*
*     class EQMktStats : public QuoddMsg
*     {
*     public:
*        u_char _nTkrUp[4];
*        u_char _nTkrDn[4];
*        u_char _volUp[8];
*        u_char _volDn[8];
*        u_char _totVol[8];
*        u_char _TRIN[4];
*        u_char _mktCtr[8];
*        u_char _nTickUp[4];
*        u_char _nTickDn[4];
*     };
*
*  REVISION HISTORY:
*      3 MAY 2012 jcs  Created.
*     10 MAY 2012 jcs  Build 19: TRIN()
*      3 OCT 2012 jcs  Build 40: Net Up / Down; Tick Up / Down
*     23 JUN 2015 jcs  Build 94: Dump()
*  
*  (c) 1994-2015 Gatea Ltd.
*******************************************************************************/
package QuoddFeed.msg;

import java.text.*;
import java.util.*;
import QuoddFeed.msg.*;
import QuoddFeed.util.*;

/////////////////////////////////////////////////////////////////
// 
//                 c l a s s   E Q M k t S t a t s
//
/////////////////////////////////////////////////////////////////
/**
 * The EQMktStats class is a parsed Market Stats message received from 
 * UltraCache.
 * <p> 
 * A EQMktStats is generated by the {@link QuoddFeed.util.UltraChan} class
 * which invokes the
 * {@link QuoddFeed.util.UltraChan#OnUpdate(String,EQMktStats)}
 * callback method to deliver the update into your application.
 */
public class EQMktStats extends QuoddMsg
{
   static public int MINSZ = QuoddMsg.MINSZ + 44;

   public  long   _nTkrUp;
   public  long   _nTkrDn;
   public  long   _volUp;
   public  long   _volDn;
   public  long   _acVol;
   private double _TRIN;
   public  String _mktCtr;
   public  long   _nTickUp;
   public  long   _nTickDn;

   ///////////////////////////////
   // Constructor
   ///////////////////////////////
   public EQMktStats()
   {
      _nTkrUp  = 0;
      _nTkrDn  = 0;
      _volUp   = 0;
      _volDn   = 0;
      _acVol   = 0;
      _TRIN    = 0.0;
      _mktCtr  = "";
      _nTickUp = 0;
      _nTickDn = 0;
   }

   public EQMktStats( byte[] b, int off, int nLeft )
   {
      this.Set( b, off, nLeft );
   }

   public EQMktStats( EQMktStats c )
   {
      super( c );
      _nTkrUp  = c._nTkrUp; 
      _nTkrDn  = c._nTkrDn; 
      _volUp   = c._volUp;
      _volDn   = c._volDn;
      _acVol   = c._acVol;
      _TRIN    = c._TRIN;
      _mktCtr  = c._mktCtr;
      _nTickUp = c._nTickUp;
      _nTickDn = c._nTickDn;
   }

   public EQMktStats clone() { return new EQMktStats( this ); }


   ///////////////////////////////
   // Access
   ///////////////////////////////
   public double TRIN()
   {
      double dr, num, den;

      /*
       * http://www.investopedia.com/terms/a/arms.asp#axzz1tYipxtw3
       *
       *  ( Advancing Issues / Declining Issues ) /
       *      ( Vol Adv Issues / Vol Decl Issues )
       */

      // Pre-conditions

      if ( _nTkrDn == 0 )
         return 0.0;
      if ( _volUp == 0 )
         return 0.0;
      if ( _volDn == 0 )
         return 0.0;

      // Safe to calculate

      num = ( 1.0 * _nTkrUp / _nTkrDn );
      den = ( 1.0 * _volUp / _volDn );
      dr  = num / den;
      return dr;
   }


   ///////////////////////////////
   // QuoddMsg Override - Dump 
   ///////////////////////////////
   @Override
   public String Dump()
   {
      String s;

      s  = super.Dump();
      s += s.format( "; %s\n", _mktCtr );
      s += s.format( "   _nTkrUp = %d; ", _nTkrUp );
      s += s.format( "_nTkrDn = %d;", _nTkrDn );
      s += s.format( "_volUp = %d; ", _volUp );
      s += s.format( "_volDn = %d; ", _volDn );
      s += s.format( "TRIN   = %.3f\n", TRIN() );
      return s;
   }


   ///////////////////////////////
   // Mutator
   ///////////////////////////////
   @Override
   public QuoddMsg Set( byte[] b, int off, int nLeft )
   {
      String err;

      super.Set( b, off, nLeft );
      off += QuoddMsg.MINSZ;
      try {
         _nTkrUp  = BigEndian.GetInt32( b, off+ 0 );
         _nTkrDn  = BigEndian.GetInt32( b, off+ 4 );
         _volUp   = BigEndian.GetInt64( b, off+ 8 );
         _volDn   = BigEndian.GetInt64( b, off+16 );
         _acVol   = BigEndian.GetInt64( b, off+24 );
         _TRIN    = BigEndian.GetPrc32( b, off+32 );
         _mktCtr  = new String( b, off+36,8 ).trim();
         _nTickUp = BigEndian.GetInt32( b, off+44 );
         _nTickDn = BigEndian.GetInt32( b, off+48 );
      } catch( StringIndexOutOfBoundsException e ) {
         err = e.getMessage();
      }
      return this;
   }
}
