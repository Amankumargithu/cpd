/******************************************************************************
*
*  BlobList.java
*     QuoddMsg._mt == 'B' (MsgTypes._mtBLOB)
*
*     class QBlobList : public QBlob
*     {
*     public:
*        u_char _blob[len()-Blob.MINSZ];  // Tokenized by _FS
*     };
*
*  REVISION HISTORY:
*     24 OCT 2011 jcs  Created.
*     30 OCT 2011 jcs  Build  3: Multi-packet - Blob._blob
*     18 NOV 2011 jcs  Build  5: lst()
*     22 FEB 2012 jcs  Build 14: v0.12: Copy constructor
*     29 MAR 2012 jcs  Build 15: v0.14: Check null-ness of _lst in Sort()
*     27 APR 2015 jcs  Build 92: De-lint
*     23 JUN 2015 jcs  Build 94: Dump()
*
*  (c) 1994-2015 Gatea Ltd.
*******************************************************************************/
package QuoddFeed.msg;

import java.util.*;
import QuoddFeed.msg.*;
import QuoddFeed.util.*;

/////////////////////////////////////////////////////////////////
//
//                 c l a s s   B l o b L i s t
//
/////////////////////////////////////////////////////////////////
/**
 * A BlobList is a structured Blob containing a list of strings tokenized 
 * by the <b>ETX</b> character.
 * <p>
 * A BlobList is generated by the {@link QuoddFeed.util.UltraChan} class 
 * which invokes the 
 * {@link QuoddFeed.util.UltraChan#OnBlobList(String,BlobList)}
 * callback method to deliver the data into your application.
 */
public class BlobList extends Blob
{
   ///////////////////////////
   // Class-wide Private Parts
   ///////////////////////////
   static private char[] _cFS = { 0x03 };
   static private String _FS  = new String( _cFS );

   ///////////////////////////
   // Instance Members
   ///////////////////////////
   private String[] _lst;

   ///////////////////////////////
   // Constructor
   ///////////////////////////////
   public BlobList()
   {
      _lst = null;
   }
      
   public BlobList( byte[] b, int off, int nLeft )
   {  
      this.Set( b, off, nLeft );
   }

   public BlobList( BlobList c )
   {
      super( c );

      // Deep Copy

      int i, n;

      n    = c._lst.length;
      _lst = new String[n];
      for ( i=0; i<n; _lst[i] = new String( c._lst[i++] ) );
   }

   public BlobList clone() { return new BlobList( this ); }


   ///////////////////////////////
   // Access
   ///////////////////////////////
   /**
    * List of structured records (e.g., Ticker Name, or Ticker Snapshot)
    * in the BlobList or BlobTable.
    */
   public String[] lst()
   {
      return _lst;
   }


   ///////////////////////////////
   // QuoddMsg Override - Dump 
   ///////////////////////////////
   @Override
   public String Dump()
   {
      String s;
      int    i, nt;

      nt = _lst.length;
      s  = super.Dump();
      s += s.format( "%s; nLst=%d; nRX=%d\n", name(), nLst(), nt );
      for ( i=0; i<nt; s += s.format( "%s\n", _lst[i++] ) );
      return s;
   }


   ///////////////////////////////
   // Mutator
   ///////////////////////////////
   @Override
   public QuoddMsg Set( byte[] b, int off, int nLeft )
   {
      String err;

      super.Set( b, off, nLeft ); 
      off += QuoddMsg.MINSZ;
      off += Blob.MINSZ;
      try {
         _lst = IsDone() ? _blob.split( _FS ) : null;
      } catch( StringIndexOutOfBoundsException e ) {
         err = e.getMessage();
         return this;
      }
      return this;
   }

   /**
    * Sort BlobList using <b>Collections.sort()</b>
    * @return this 
    */
   public QuoddMsg Sort()
   {
      ArrayList<String> arr;
      int               i, nB;

      // Pre-condition(s)

      if ( !IsDone() || ( _lst == null ) )
         return this;

      // Sort list of Strings

      arr = new ArrayList<String>();
      nB  = _lst.length;
      for ( i=0; i<nB; arr.add( _lst[i++] ) );
      Collections.sort( arr );
      for ( i=0; i<nB; _lst[i] = arr.get( i++ ) );
      return this;
   }
}
